apiVersion: apps/v1
kind: Deployment
metadata:
  name: kessler-frontend-deployment
  namespace: {{.Values.namespace}}
spec:
  replicas: {{ .Values.frontend.replicas }}
  selector:
    matchLabels:
      app: frontend
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  template:
    metadata:
      labels:
        app: frontend
    spec:
      {{/* hostNetwork: true */}}
      containers:
      - name: frontend
        image: "{{ .Values.frontend.image.repository }}:{{ .Values.frontend.image.tag }}"
        ports:
        - containerPort: {{ .Values.frontend.port }}
        command:
        - npm
        - run
        - start
        envFrom:
        - configMapRef:
            name: kessler-public-config
        - secretRef:
            name: kessler-private-config
        livenessProbe:
          httpGet:
            path: /
            port: {{ .Values.frontend.port }}
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 1
        volumeMounts:
        - mountPath: /app/.env
          name: env-local
          readOnly: true
          subPath: .env.local
        - mountPath: /app/.env.local
          name: env-local
          readOnly: true
          subPath: .env.local
      volumes:
      - configMap:
          defaultMode: 420
          items:
          - key: .env
            path: .env.local
          name: kessler-nextjslocal-config
        name: env-local

